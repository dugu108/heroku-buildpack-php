#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# fail fast
set -e

# config
APACHE_VERSION="2.2.24"
APACHE_PATH="apache"
PHP_VERSION="5.3.24"
PHP_PATH="php"
DOWNLOAD_SERVER="http://10.168.3.189/static"
APACHE_FILE_NAME="apache-$APACHE_VERSION.tar.gz"
PHP_FILE_NAME="php-$PHP_VERSION.tar.gz"

BIN_DIR=$(dirname $0)
BUILD_DIR=$1
CACHE_DIR=$2
LP_DIR=`cd $(dirname $0); cd ..; pwd`
if [ -z "$BUILDPACK_CACHE" ]; then BUILDPACK_CACHE="/tmp"; fi

# include .files when moving things around
shopt -s dotglob

cd $BUILD_DIR

# move app things to www
mkdir -p $CACHE_DIR/www
mv * $CACHE_DIR/www
mv $CACHE_DIR/www .

# keep Procfile
if [ -f www/Procfile ]; then
  mv www/Procfile .
fi

echo "-----> Bundling Apache version $APACHE_VERSION"
if [ -f "${BUILDPACK_CACHE}/$APACHE_FILE_NAME" ]; then
    cp ${BUILDPACK_CACHE}/$APACHE_FILE_NAME $APACHE_FILE_NAME
else
    APACHE_URL="$DOWNLOAD_SERVER/$APACHE_FILE_NAME"
    curl --silent --max-time 60 --location "$APACHE_URL" -o $APACHE_FILE_NAME
fi
tar xf $APACHE_FILE_NAME

echo "-----> Bundling PHP version $PHP_VERSION"
if [ -f "${BUILDPACK_CACHE}/$PHP_FILE_NAME" ]; then
    cp ${BUILDPACK_CACHE}/$PHP_FILE_NAME $PHP_FILE_NAME
else
    PHP_URL="$DOWNLOAD_SERVER/php-$PHP_VERSION.tar.gz"
    curl --silent --max-time 60 --location "$PHP_URL" -o $PHP_FILE_NAME
fi
tar xf $PHP_FILE_NAME

# update config files
cp $LP_DIR/conf/httpd.conf $APACHE_PATH/conf
cp $LP_DIR/conf/php.ini php

# make php available on bin
mkdir -p bin
ln -s /app/php/bin/php bin/php

cat >>boot.sh <<EOF
for var in \`env|cut -f1 -d=\`; do
  echo "PassEnv \$var" >> /home/vcap/app/apache/conf/httpd.conf;
done
touch /home/vcap/app/apache/logs/error_log
touch /home/vcap/app/apache/logs/access_log
tail -F /home/vcap/app/apache/logs/error_log &
tail -F /home/vcap/app/apache/logs/access_log &
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/home/vcap/app/php/ext/:/home/vcap/libs/mysql/:/home/vcap/libs/php/modules/:/home/vcap/libs/
export PHP_INI_SCAN_DIR=/home/vcap/app/www
echo "Launching apache"
exec /home/vcap/app/apache/bin/httpd -DNO_DETACH
EOF

chmod +x boot.sh

# clean the cache
rm -rf $CACHE_DIR
